version: '3.5'

services:
#DataBases
  kong-database:
    image: 'postgres:10.1'
    environment:
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
      POSTGRES_DB: kong
      PGDATA: /var/lib/postgresql/data/pgdata
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
    expose:
      - '5432'
    volumes:
      - kong-database-volume:/var/lib/postgresql/data/pgdata

#ELK
  elk:
    image: sebp/elk
    environment:
      ELASTICSEARCH_START: 1
      LOGSTASH_START: 1
      KIBANA_START: 1
    ports:
      - "5601:5601"
      - "9200:9200"
      - "5044:5044"
    volumes:
      - elk-data:/var/lib/elasticsearch

#KONG
  kong-migration:
    image: 'kong:latest'
    command: "kong migrations bootstrap"
    restart: on-failure
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    links:
      - kong-database
    depends_on:
      - kong-database

  kong:
    image: 'kong:latest'
    command: kong start --run-migrations
    environment:
      KONG_DATABASE: postgres      
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    links:
      - kong-database
    restart: always
    ports:
      - 8000:8000
      - 8001:8001
      - 8443:8443      
      - 8444:8444
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kong:8001"]
      interval: 5s
      timeout: 2s
      retries: 15
    depends_on:
      - kong-migration

  konga-prepare:
    image: 'pantsel/konga:next'
    command: "-c prepare -a postgres -u postgresql://kong:kong@kong-database:5432/konga_db"
    restart: on-failure
    links:
      - kong-database
      - konga
    depends_on:
      - kong-database

  konga:
    image: 'pantsel/konga:next'
    restart: always
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: kong
      DB_PASSWORD: kong
      TOKEN_SECRET: km1GUr4RkcQD7DewhJPNXrCuZwcKmqjb
      DB_DATABASE: konga_db
      NODE_ENV: production
    depends_on:
      - konga-prepare
    links:
      - kong-database
      - kong
    ports:
      - "1337:1337"

#Application
  book-manager:
      build: .
      image: 'bookmanager:latest'
      ports:
        - 5000:5000

volumes:
  kong-database-volume:    
  elk-data:
  bookmanager-database-volume:  